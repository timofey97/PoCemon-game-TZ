[{"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\index.js":"1","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\App.js":"2","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Header\\index.js":"3","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Layout\\index.js":"4","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Footer\\index.js":"5","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\PocemonCard\\index.js":"6","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\HomePage\\index.js":"7","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\index.js":"8","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\Menu\\index.js":"9","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\navBar\\index.js":"10","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\main-menu.js":"11","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\AboutPage\\index.js":"12","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\NotFound\\index.js":"13","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\ContactPage\\index.js":"14","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\firebase.js":"15","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\index.js":"16","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\spinner.js":"17","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\index.js":"18","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\index.js":"19","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Start\\index.js":"20","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Finish\\index.js":"21","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\FirebaseContext.js":"22","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\PokemonsContent.js":"23","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\PlayBoard.js":"24","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\Result\\Result\\index.js":"25","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\ArrowChoice\\ArrowChoice\\index.js":"26"},{"size":264,"mtime":1612391000334,"results":"27","hashOfConfig":"28"},{"size":1690,"mtime":1613518684176,"results":"29","hashOfConfig":"28"},{"size":727,"mtime":1612392349937,"results":"30","hashOfConfig":"28"},{"size":791,"mtime":1612188028498,"results":"31","hashOfConfig":"28"},{"size":312,"mtime":1611785263626,"results":"32","hashOfConfig":"28"},{"size":1728,"mtime":1613140392726,"results":"33","hashOfConfig":"28"},{"size":2507,"mtime":1612398081462,"results":"34","hashOfConfig":"28"},{"size":718,"mtime":1612391260414,"results":"35","hashOfConfig":"28"},{"size":853,"mtime":1612392824167,"results":"36","hashOfConfig":"28"},{"size":934,"mtime":1612448965873,"results":"37","hashOfConfig":"28"},{"size":303,"mtime":1612392036478,"results":"38","hashOfConfig":"28"},{"size":1277,"mtime":1612388652205,"results":"39","hashOfConfig":"28"},{"size":371,"mtime":1612398143928,"results":"40","hashOfConfig":"28"},{"size":1292,"mtime":1612398100198,"results":"41","hashOfConfig":"28"},{"size":1646,"mtime":1613082723999,"results":"42","hashOfConfig":"28"},{"size":60,"mtime":1610648090454,"results":"43","hashOfConfig":"28"},{"size":387,"mtime":1610648041064,"results":"44","hashOfConfig":"28"},{"size":2967,"mtime":1613470102481,"results":"45","hashOfConfig":"28"},{"size":6156,"mtime":1613518768896,"results":"46","hashOfConfig":"28"},{"size":2407,"mtime":1613301030931,"results":"47","hashOfConfig":"28"},{"size":2914,"mtime":1613578586680,"results":"48","hashOfConfig":"28"},{"size":88,"mtime":1612826935819,"results":"49","hashOfConfig":"28"},{"size":85,"mtime":1612829284225,"results":"50","hashOfConfig":"28"},{"size":1707,"mtime":1613469507841,"results":"51","hashOfConfig":"28"},{"size":725,"mtime":1613469463839,"results":"52","hashOfConfig":"28"},{"size":318,"mtime":1613469098161,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1n8qzt6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\index.js",[],["110","111"],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\App.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Header\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Layout\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Footer\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\PocemonCard\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\HomePage\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\Menu\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\navBar\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\main-menu.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\AboutPage\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\NotFound\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\ContactPage\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\firebase.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\index.js",[],["112","113"],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\spinner.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\index.js",["114"],"import {Switch, Route, useRouteMatch, useHistory} from 'react-router-dom'\r\nimport { PokemonContext } from '../../../context/PokemonsContent';\r\nimport BoardPage from './Board';\r\nimport FinishPage from './Finish';\r\nimport StartPage from './Start';\r\nimport { FireBaseContext } from '../../../context/FirebaseContext';\r\nimport { useContext, useState, useEffect } from 'react';\r\n\r\nconst GamePage = () => {\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n    const firebase = useContext( FireBaseContext );\r\n    const [ selectedPokemons, setSelectedPokemons ] = useState([]);\r\n    const [ pokemons, setPokemons ] = useState({});\r\n    const [opponentPokemon, setOpponentPokemon] = useState([]);\r\n    const [gameResult, setGameResult] = useState(null);\r\n\r\n    const hendleOpponentPokemon = (pokemons) => {\r\n        setOpponentPokemon((prevState) => {\r\n        return [\r\n            ...prevState,\r\n            ...pokemons,\r\n        ]\r\n        })\r\n    }\r\n    console.log(opponentPokemon);\r\n\r\n    const hendleClearContext = () => {\r\n    \r\n        setOpponentPokemon([]);\r\n        setGameResult(null);\r\n        \r\n    }\r\n\r\n    useEffect( () => {\r\n        hendleClearContext();\r\n        firebase.getPokemonSocket( ( pokemons ) => {\r\n            setPokemons( pokemons );\r\n        })\r\n\r\n        return () => firebase.offPokemonSocket();\r\n    }, [] );\r\n\r\n    const handleSelectedPokemons = ( id ) => {\r\n        setSelectedPokemons( () => {\r\n            return [];\r\n        })\r\n\r\n        setPokemons( prevState => {\r\n            return Object.entries( prevState ).reduce( ( acc, item ) => {\r\n                const pokemon = { ...item[1] };\r\n                if( item[0] === id ) {\r\n                    pokemon.isSelected = !pokemon.isSelected ;\r\n                };\r\n\r\n                acc[item[0]] = pokemon;\r\n\r\n                if( pokemon.isSelected ) {\r\n                    setSelectedPokemons( prevState => {\r\n                        return [ ...prevState, pokemon ];\r\n                    })\r\n                }\r\n\r\n                return acc;\r\n            }, {});\r\n        });\r\n    }\r\n\r\n      const handleGameFinished = (result) => {\r\n        setGameResult(result);\r\n        history.replace('/game/finish');\r\n    };\r\n    \r\n    return (\r\n        <PokemonContext.Provider value = {{\r\n            selectedPokemons,\r\n            onSetSelected: handleSelectedPokemons,\r\n            allPokemons: pokemons,\r\n            opponentPokemon,\r\n            addOpponentPokemons: hendleOpponentPokemon,\r\n            clearContext: hendleClearContext,\r\n            gameResult,\r\n            onGameFinished: handleGameFinished\r\n        }}>\r\n        <Switch>\r\n            <Route path={`${match.path}/`} exact component={StartPage} />\r\n            <Route path={`${match.path}/board`} component={BoardPage} />\r\n            <Route path={`${match.path}/finish`} component={FinishPage} />\r\n        </Switch>\r\n        </PokemonContext.Provider>\r\n    );\r\n};\r\n\r\nexport default GamePage;\r\n\r\n","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\index.js",["115","116"],"import s from './style.module.css';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { PokemonContext} from '../../../../context/PokemonsContent';\r\nimport PockemonCard from '../../../../components/PocemonCard';\r\nimport PlayerBoard from './component/PlayBoard';\r\nimport ArrowChoice from './component/ArrowChoice/ArrowChoice';\r\nimport Result from './component/Result/Result';\r\n\r\nconst counterWin = (board, player1, player2) => {\r\n    let player1Count = player1.length;\r\n    let player2Count = player2.length;\r\n\r\n    board.forEach(element => {\r\n        if(element.card.possession === 'red') {\r\n            player2Count++;\r\n        }\r\n        if(element.card.possession === 'blue') {\r\n            player1Count++;\r\n        }\r\n        \r\n    });\r\n    return [player1Count, player2Count]\r\n}\r\n\r\nconst randomSide = () => {\r\n  let random = Math.floor(1 + Math.random() * 2);\r\n  return random;\r\n};\r\n\r\nconst BoardPage = () => {\r\n      const SelectedContext = useContext(PokemonContext);\r\n    const [board, setBoard] = useState([]);\r\n    const [player2, setPlayer2] = useState([]);\r\n    const [player1, setPlayer1] = useState(()=> {\r\n        return SelectedContext.selectedPokemons.map(item => ({\r\n            ...item, possession: 'blue', isSelected: false\r\n        }))\r\n    });\r\n    const [choiseCar, setChoiseCard] = useState(null);\r\n    const [steps, setStaps] =useState (0);\r\n    const [side, setSide] = useState(0);\r\n    const [stop, setStop] = useState(false);\r\n\r\n    const [resultType, setResultType] = useState(null);\r\n    const history = useHistory();\r\n\r\n    if(SelectedContext.selectedPokemons.length === 0 ) {\r\n        history.replace('/game');\r\n    }\r\n\r\n    useEffect( ()=> {\r\n         async function FetchData () {\r\n            const boardRespons = await fetch('https://reactmarathon-api.netlify.app/api/board');\r\n            const boardRequest = await boardRespons.json();\r\n            setBoard(boardRequest.data);\r\n\r\n            const player2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\r\n            const player2Request = await player2Response.json();\r\n            SelectedContext.addOpponentPokemons(player2Request.data);\r\n            setPlayer2(()=> {\r\n        return player2Request.data.map(item => ({\r\n            ...item, possession: 'red',\r\n        }))\r\n    })}\r\n    FetchData();\r\n    setTimeout(() => {\r\n      setSide(randomSide);\r\n    }, 3000);\r\n        \r\n    }, [])\r\n\r\n    const handleClickBoardPlate= async (position) => {\r\n        if(choiseCar) {\r\n            setStop(true);\r\n            const params ={\r\n                position,\r\n                card: choiseCar,\r\n                board\r\n            }\r\n\r\n\r\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(params),\r\n            });\r\n\r\n            const request = await res.json();\r\n            \r\n            if (choiseCar.player === 1) {\r\n                setPlayer1(prevState => prevState.filter(item => item.id !== choiseCar.id))\r\n            }\r\n            if (choiseCar.player === 2) {\r\n                setPlayer2(prevState => prevState.filter(item => item.id !== choiseCar.id))\r\n            }\r\n            setBoard(request.data);\r\n            setStaps( prevState => {\r\n                const count = prevState+1;\r\n                return count\r\n            })\r\n             setSide((prevState) => {\r\n                if (prevState === 1) {\r\n                return 2;\r\n                }\r\n                if (prevState === 2) {\r\n                return 1;\r\n                }\r\n            });\r\n            }\r\n        }\r\n\r\n\r\n          useEffect(() => {\r\n                if (steps === 9) {\r\n                const [count1, count2] = counterWin(board, player1, player2);\r\n                if (count1 > count2) {\r\n                    setResultType('win');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('WIN');\r\n                }, 1000);\r\n                } else if (count1 < count2) {\r\n                    setResultType('lose');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('LOSE');\r\n                }, 1000);\r\n                } else {\r\n                    setResultType('draw');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('DRAW');\r\n                }, 2000);\r\n                }\r\n                console.log(resultType)\r\n                \r\n                }\r\n            }, [steps]);\r\n\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <Result type={resultType} />\r\n            <ArrowChoice stop={stop} side={side} />\r\n\r\n            <div className={s.playerOne}>\r\n                <PlayerBoard \r\n                player={1}\r\n                cards={player1} \r\n                onClickCard={(card)=> { if (side === 1) {setChoiseCard(card)}}} \r\n                disabled={side !== 1}/>\r\n\r\n\r\n                \r\n            </div>\r\n            <div className={s.board}>\r\n                {\r\n                    board.map(item => (\r\n                        <div\r\n                            key={item.position}\r\n                            className={s.boardPlate}\r\n                            onClick={() => !item.card && handleClickBoardPlate(item.position)}>\r\n                                {\r\n                                    item.card && <PockemonCard {...item.card} minimize isActive className ={s.card} onCardClick={()=> console.log('s')}/>\r\n                                }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className={s.playerTwo}>\r\n                <PlayerBoard \r\n                    player={2} \r\n                    cards={player2} \r\n                    onClickCard={(card)=> {if (side === 2) {setChoiseCard(card)} }} \r\n                    disabled={side !== 2}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardPage;","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Start\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Finish\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\FirebaseContext.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\PokemonsContent.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\PlayBoard.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\Result\\Result\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\ArrowChoice\\ArrowChoice\\index.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":42,"column":8,"nodeType":"125","endLine":42,"endColumn":10,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":71,"column":8,"nodeType":"125","endLine":71,"endColumn":10,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":138,"column":16,"nodeType":"125","endLine":138,"endColumn":23,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'SelectedContext'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'SelectedContext', 'board', 'player1', 'player2', and 'resultType'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [firebase]",{"range":"142","text":"143"},"Update the dependencies array to be: [SelectedContext]",{"range":"144","text":"145"},"Update the dependencies array to be: [SelectedContext, board, player1, player2, resultType, steps]",{"range":"146","text":"147"},[1353,1355],"[firebase]",[2480,2482],"[SelectedContext]",[4695,4702],"[SelectedContext, board, player1, player2, resultType, steps]"]