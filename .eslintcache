[{"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\index.js":"1","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\App.js":"2","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Header\\index.js":"3","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Layout\\index.js":"4","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Footer\\index.js":"5","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\PocemonCard\\index.js":"6","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\HomePage\\index.js":"7","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\index.js":"8","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\Menu\\index.js":"9","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\navBar\\index.js":"10","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\main-menu.js":"11","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\AboutPage\\index.js":"12","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\NotFound\\index.js":"13","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\ContactPage\\index.js":"14","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\firebase.js":"15","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\index.js":"16","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\spinner.js":"17","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\index.js":"18","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\index.js":"19","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Start\\index.js":"20","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Finish\\index.js":"21","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\FirebaseContext.js":"22","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\PokemonsContent.js":"23","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\PlayBoard.js":"24","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\Result\\Result\\index.js":"25","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\ArrowChoice\\ArrowChoice\\index.js":"26","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\counter.js":"27","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\index.js":"28","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\pokemons.js":"29","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Modal\\index.js":"30"},{"size":381,"mtime":1613923262039,"results":"31","hashOfConfig":"32"},{"size":1694,"mtime":1613924961234,"results":"33","hashOfConfig":"32"},{"size":737,"mtime":1613922491066,"results":"34","hashOfConfig":"32"},{"size":791,"mtime":1612188028498,"results":"35","hashOfConfig":"32"},{"size":312,"mtime":1611785263626,"results":"36","hashOfConfig":"32"},{"size":1728,"mtime":1613140392726,"results":"37","hashOfConfig":"32"},{"size":2970,"mtime":1613923300663,"results":"38","hashOfConfig":"32"},{"size":1176,"mtime":1614451802120,"results":"39","hashOfConfig":"32"},{"size":853,"mtime":1612392824167,"results":"40","hashOfConfig":"32"},{"size":1232,"mtime":1614450741477,"results":"41","hashOfConfig":"32"},{"size":303,"mtime":1612392036478,"results":"42","hashOfConfig":"32"},{"size":1277,"mtime":1612388652205,"results":"43","hashOfConfig":"32"},{"size":371,"mtime":1612398143928,"results":"44","hashOfConfig":"32"},{"size":1292,"mtime":1612398100198,"results":"45","hashOfConfig":"32"},{"size":1703,"mtime":1613924925249,"results":"46","hashOfConfig":"32"},{"size":60,"mtime":1610648090454,"results":"47","hashOfConfig":"32"},{"size":387,"mtime":1610648041064,"results":"48","hashOfConfig":"32"},{"size":3016,"mtime":1613925506939,"results":"49","hashOfConfig":"32"},{"size":6156,"mtime":1613518768896,"results":"50","hashOfConfig":"32"},{"size":2409,"mtime":1613924993042,"results":"51","hashOfConfig":"32"},{"size":2890,"mtime":1613925566456,"results":"52","hashOfConfig":"32"},{"size":88,"mtime":1612826935819,"results":"53","hashOfConfig":"32"},{"size":85,"mtime":1612829284225,"results":"54","hashOfConfig":"32"},{"size":1707,"mtime":1613469507841,"results":"55","hashOfConfig":"32"},{"size":725,"mtime":1613469463839,"results":"56","hashOfConfig":"32"},{"size":318,"mtime":1613469098161,"results":"57","hashOfConfig":"32"},{"size":592,"mtime":1613923079995,"results":"58","hashOfConfig":"32"},{"size":267,"mtime":1613923573233,"results":"59","hashOfConfig":"32"},{"size":1158,"mtime":1613925126077,"results":"60","hashOfConfig":"32"},{"size":1189,"mtime":1614452448514,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1n8qzt6",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\index.js",[],["128","129"],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\App.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Header\\index.js",["130"],"import s from './style.module.css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Header = ({title, descr, onClickGamePage}) => {\r\n    const history = useHistory();\r\n    return (\r\n        <header className={s.root}>\r\n            <div className={s.forest}></div>\r\n            <div className={s.silhouette}></div>\r\n            <div className={s.moon}></div>\r\n            <div className={s.container}>\r\n                <h1>{title} </h1>\r\n                <p>{descr}</p>\r\n                <button \r\n                    className={s.btnhome} \r\n                    onClick={()=> onClickGamePage()}>\r\n                    Start Game\r\n                </button>\r\n            </div>\r\n        </header>\r\n    )    \r\n}\r\n\r\nexport default Header;","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Layout\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Footer\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\PocemonCard\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\HomePage\\index.js",["131"],"import Header from '../../components/Header';\r\nimport Layout from '../../components/Layout';\r\n\r\n\r\nimport bg from '../../assets/bg1.jpg';\r\nimport bg2 from '../../assets/bg2.jpg';\r\n\r\nimport './style.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plusAction, selectCount} from '../../store/counter';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  const count = useSelector(selectCount)\r\n  const dispatch = useDispatch();\r\n  console.log('count', count)\r\n\r\n  const onClickGameBut= () => {\r\n    // history.push('/game');\r\n    dispatch(plusAction(1));\r\n  }\r\n  return (\r\n    <>\r\n        \r\n        <Header \r\n            title={'PokemonGame'}\r\n            descr={'Lets GO!'}\r\n            onClickGamePage={onClickGameBut}\r\n            \r\n          />\r\n       \r\n        <Layout \r\n            id='rules'\r\n            title='Rules'\r\n            urlBg={bg} \r\n          >\r\n            <p>In the game two players face off against one another, one side playing as \"blue\", the other as \"red\" on a 3x3 grid.\r\n                Each player has five cards in a hand and the aim is to capture the opponent's cards by turning them into the player's own color of red or blue.\r\n              </p> \r\n            <p>To win, a majority of the total ten cards played (including the one card that is not placed on the board) must be of the player's card color. To do this, the player must capture cards by placing a card adjacent to an opponent's card whereupon the 'ranks' of the sides where the two cards touch will be compared. If the rank of the opponent's card is higher than the player's card, the player's card will be captured and turned into the opponent's color. If the player's rank is higher, the opponent's card will be captured and changed into the player's color instead. \r\n              </p>\r\n        </Layout>\r\n        <Layout \r\n          id='about'\r\n          title=\"About\"\r\n          urlBg={bg2} \r\n        >\r\n          <p>In the game two players face off against one another, one side playing as \"blue\", the other as \"red\" on a 3x3 grid.\r\n              Each player has five cards in a hand and the aim is to capture the opponent's cards by turning them into the player's own color of red or blue.\r\n            </p> \r\n          <p>To win, a majority of the total ten cards played (including the one card that is not placed on the board) must be of the player's card color. To do this, the player must capture cards by placing a card adjacent to an opponent's card whereupon the 'ranks' of the sides where the two cards touch will be compared. If the rank of the opponent's card is higher than the player's card, the player's card will be captured and turned into the opponent's color. If the player's rank is higher, the opponent's card will be captured and changed into the player's color instead. \r\n            </p>\r\n        </Layout> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\Menu\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\MenuHeader\\navBar\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\main-menu.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\AboutPage\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\NotFound\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\ContactPage\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\data\\firebase.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\index.js",[],["132","133"],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\spinner\\spinner.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\index.js",["134","135"],"import {Switch, Route, useRouteMatch, useHistory} from 'react-router-dom'\r\nimport { PokemonContext } from '../../../context/PokemonsContent';\r\nimport BoardPage from './Board';\r\nimport FinishPage from './Finish';\r\nimport StartPage from './Start';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPokemonsAsync, selectPokemonsData } from '../../../store/pokemons';\r\n\r\nconst GamePage = () => {\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    const [ selectedPokemons, setSelectedPokemons ] = useState([]);\r\n    const [ pokemons, setPokemons ] = useState({});\r\n    const [opponentPokemon, setOpponentPokemon] = useState([]);\r\n    const [gameResult, setGameResult] = useState(null);\r\n\r\n    const pokemonsRedux = useSelector(selectPokemonsData)\r\n    const dispatch = useDispatch()\r\n\r\n    const hendleOpponentPokemon = (pokemons) => {\r\n        setOpponentPokemon((prevState) => {\r\n        return [\r\n            ...prevState,\r\n            ...pokemons,\r\n        ]\r\n        })\r\n    }\r\n\r\n    const hendleClearContext = () => {\r\n    \r\n        setOpponentPokemon([]);\r\n        setGameResult(null);\r\n        \r\n    }\r\n\r\n    useEffect( () => {\r\n        hendleClearContext();\r\n        dispatch(getPokemonsAsync());\r\n    }, [] );\r\n\r\n    useEffect(()=> {\r\n        setPokemons(pokemonsRedux);\r\n    }, [pokemonsRedux]);\r\n\r\n    const handleSelectedPokemons = ( id ) => {\r\n        setSelectedPokemons( () => {\r\n            return [];\r\n        })\r\n\r\n        setPokemons( prevState => {\r\n            return Object.entries( prevState ).reduce( ( acc, item ) => {\r\n                const pokemon = { ...item[1] };\r\n                if( item[0] === id ) {\r\n                    pokemon.isSelected = !pokemon.isSelected ;\r\n                };\r\n\r\n                acc[item[0]] = pokemon;\r\n\r\n                if( pokemon.isSelected ) {\r\n                    setSelectedPokemons( prevState => {\r\n                        return [ ...prevState, pokemon ];\r\n                    })\r\n                }\r\n\r\n                return acc;\r\n            }, {});\r\n        });\r\n    }\r\n\r\n      const handleGameFinished = (result) => {\r\n        setGameResult(result);\r\n        history.replace('/game/finish');\r\n    };\r\n    \r\n    return (\r\n        <PokemonContext.Provider value = {{\r\n            selectedPokemons,\r\n            onSetSelected: handleSelectedPokemons,\r\n            allPokemons: pokemons,\r\n            opponentPokemon,\r\n            addOpponentPokemons: hendleOpponentPokemon,\r\n            clearContext: hendleClearContext,\r\n            gameResult,\r\n            onGameFinished: handleGameFinished\r\n        }}>\r\n        <Switch>\r\n            <Route path={`${match.path}/`} exact component={StartPage} />\r\n            <Route path={`${match.path}/board`} component={BoardPage} />\r\n            <Route path={`${match.path}/finish`} component={FinishPage} />\r\n        </Switch>\r\n        </PokemonContext.Provider>\r\n    );\r\n};\r\n\r\nexport default GamePage;\r\n\r\n","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\index.js",["136","137"],"import s from './style.module.css';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { PokemonContext} from '../../../../context/PokemonsContent';\r\nimport PockemonCard from '../../../../components/PocemonCard';\r\nimport PlayerBoard from './component/PlayBoard';\r\nimport ArrowChoice from './component/ArrowChoice/ArrowChoice';\r\nimport Result from './component/Result/Result';\r\n\r\nconst counterWin = (board, player1, player2) => {\r\n    let player1Count = player1.length;\r\n    let player2Count = player2.length;\r\n\r\n    board.forEach(element => {\r\n        if(element.card.possession === 'red') {\r\n            player2Count++;\r\n        }\r\n        if(element.card.possession === 'blue') {\r\n            player1Count++;\r\n        }\r\n        \r\n    });\r\n    return [player1Count, player2Count]\r\n}\r\n\r\nconst randomSide = () => {\r\n  let random = Math.floor(1 + Math.random() * 2);\r\n  return random;\r\n};\r\n\r\nconst BoardPage = () => {\r\n      const SelectedContext = useContext(PokemonContext);\r\n    const [board, setBoard] = useState([]);\r\n    const [player2, setPlayer2] = useState([]);\r\n    const [player1, setPlayer1] = useState(()=> {\r\n        return SelectedContext.selectedPokemons.map(item => ({\r\n            ...item, possession: 'blue', isSelected: false\r\n        }))\r\n    });\r\n    const [choiseCar, setChoiseCard] = useState(null);\r\n    const [steps, setStaps] =useState (0);\r\n    const [side, setSide] = useState(0);\r\n    const [stop, setStop] = useState(false);\r\n\r\n    const [resultType, setResultType] = useState(null);\r\n    const history = useHistory();\r\n\r\n    if(SelectedContext.selectedPokemons.length === 0 ) {\r\n        history.replace('/game');\r\n    }\r\n\r\n    useEffect( ()=> {\r\n         async function FetchData () {\r\n            const boardRespons = await fetch('https://reactmarathon-api.netlify.app/api/board');\r\n            const boardRequest = await boardRespons.json();\r\n            setBoard(boardRequest.data);\r\n\r\n            const player2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\r\n            const player2Request = await player2Response.json();\r\n            SelectedContext.addOpponentPokemons(player2Request.data);\r\n            setPlayer2(()=> {\r\n        return player2Request.data.map(item => ({\r\n            ...item, possession: 'red',\r\n        }))\r\n    })}\r\n    FetchData();\r\n    setTimeout(() => {\r\n      setSide(randomSide);\r\n    }, 3000);\r\n        \r\n    }, [])\r\n\r\n    const handleClickBoardPlate= async (position) => {\r\n        if(choiseCar) {\r\n            setStop(true);\r\n            const params ={\r\n                position,\r\n                card: choiseCar,\r\n                board\r\n            }\r\n\r\n\r\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(params),\r\n            });\r\n\r\n            const request = await res.json();\r\n            \r\n            if (choiseCar.player === 1) {\r\n                setPlayer1(prevState => prevState.filter(item => item.id !== choiseCar.id))\r\n            }\r\n            if (choiseCar.player === 2) {\r\n                setPlayer2(prevState => prevState.filter(item => item.id !== choiseCar.id))\r\n            }\r\n            setBoard(request.data);\r\n            setStaps( prevState => {\r\n                const count = prevState+1;\r\n                return count\r\n            })\r\n             setSide((prevState) => {\r\n                if (prevState === 1) {\r\n                return 2;\r\n                }\r\n                if (prevState === 2) {\r\n                return 1;\r\n                }\r\n            });\r\n            }\r\n        }\r\n\r\n\r\n          useEffect(() => {\r\n                if (steps === 9) {\r\n                const [count1, count2] = counterWin(board, player1, player2);\r\n                if (count1 > count2) {\r\n                    setResultType('win');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('WIN');\r\n                }, 1000);\r\n                } else if (count1 < count2) {\r\n                    setResultType('lose');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('LOSE');\r\n                }, 1000);\r\n                } else {\r\n                    setResultType('draw');\r\n                    setTimeout(() => {\r\n                   SelectedContext.onGameFinished('DRAW');\r\n                }, 2000);\r\n                }\r\n                console.log(resultType)\r\n                \r\n                }\r\n            }, [steps]);\r\n\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <Result type={resultType} />\r\n            <ArrowChoice stop={stop} side={side} />\r\n\r\n            <div className={s.playerOne}>\r\n                <PlayerBoard \r\n                player={1}\r\n                cards={player1} \r\n                onClickCard={(card)=> { if (side === 1) {setChoiseCard(card)}}} \r\n                disabled={side !== 1}/>\r\n\r\n\r\n                \r\n            </div>\r\n            <div className={s.board}>\r\n                {\r\n                    board.map(item => (\r\n                        <div\r\n                            key={item.position}\r\n                            className={s.boardPlate}\r\n                            onClick={() => !item.card && handleClickBoardPlate(item.position)}>\r\n                                {\r\n                                    item.card && <PockemonCard {...item.card} minimize isActive className ={s.card} onCardClick={()=> console.log('s')}/>\r\n                                }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className={s.playerTwo}>\r\n                <PlayerBoard \r\n                    player={2} \r\n                    cards={player2} \r\n                    onClickCard={(card)=> {if (side === 2) {setChoiseCard(card)} }} \r\n                    disabled={side !== 2}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardPage;","D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Start\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Finish\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\FirebaseContext.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\context\\PokemonsContent.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\PlayBoard.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\Result\\Result\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\routes\\Game\\routes\\Board\\component\\ArrowChoice\\ArrowChoice\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\counter.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\index.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\store\\pokemons.js",[],"D:\\Desktop\\Zar\\pocemon-game-tz\\src\\components\\Modal\\index.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":5,"column":11,"nodeType":"144","messageId":"145","endLine":5,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":15,"column":9,"nodeType":"144","messageId":"145","endLine":15,"endColumn":16},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"142","severity":1,"message":"148","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":41,"column":8,"nodeType":"151","endLine":41,"endColumn":10,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":71,"column":8,"nodeType":"151","endLine":71,"endColumn":10,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"155","line":138,"column":16,"nodeType":"151","endLine":138,"endColumn":23,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["157"],["158"],"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'SelectedContext'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'SelectedContext', 'board', 'player1', 'player2', and 'resultType'. Either include them or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},"Update the dependencies array to be: [SelectedContext]",{"range":"170","text":"171"},"Update the dependencies array to be: [SelectedContext, board, player1, player2, resultType, steps]",{"range":"172","text":"173"},[1315,1317],"[dispatch]",[2480,2482],"[SelectedContext]",[4695,4702],"[SelectedContext, board, player1, player2, resultType, steps]"]